{
    "contents" : "#!/usr/bin/perl -w\n\nuse strict;\nuse Crypt::RC4;\nuse constant TRUE => -1;\nuse constant FALSE => 0;\n#************************ PARAMETERS *********************************************************\n\nmy($sourceRoot) = \"/home\";\nmy($group) = \"admins\";\nmy($permissions) = \"770\";\n#*********************************************************************************************\n\n\n#createdirectories commandline arguments\n\n\n\nsub showUsage {\n  \n  print \"\\nUSAGE: perl createdirectories.pl --studentfile=<filename> [--source=<source path> (Alternate source path) --domainname=<domain> --email=<email address> (Email for submission report) --group=<group name> (Security Group) --permissions=<nnn> (Default Directory Permissions) --key=<password file key> --passwordfile=<password file>]\\n\\n\";\n  exit;\n  \n}\n\n\nmy($studentfile,$sendEmail,$summaryLine,$recipientAddress,$key,$passwordFile,$decryptedPassword,$domainname,$userDirective);\n\n$sendEmail = FALSE;\n\nforeach my $item(@ARGV) {\n  \n  \n  if ($item =~ m/--studentfile=/i) {\n    $studentfile = substr($item,14,length($item)-14);\n  }\n  \n  if ($item =~ m/--source=/i) {\n    $sourceRoot = substr($item,9,length($item)-9);\n  }\n  \n  if ($item =~ m/--email=/i) {\n    $sendEmail = TRUE;\n    $recipientAddress = substr($item,8,length($item)-8);\n  }\n  \n  if ($item =~ m/--group=/i) {\n    $group = substr($item,8,length($item)-8);\n  }\n  \n  if ($item =~ m/--permissions=/i) {\n    $permissions = substr($item,14,length($item)-14);\n  }\n\n  if ($item =~ m/--domainname=/i) {\n    $domainname = substr($item,13,length($item)-13);\n    $userDirective = $domainname; \n  }\n  \n  if ($item =~ m/--key=/i) {\n    $key = substr($item,6,length($item)-6);\n  }\n  \n  if ($item =~ m/--passwordfile=/i) {\n    $passwordFile = substr($item,15,length($item)-15);\n  }\n  \n}\n\nif ($passwordFile) {\n  \n  my($INPUTFILE);\n  open ($INPUTFILE, \"<$passwordFile\") or die \"Could not open $passwordFile\\n\";\n  \n  while (<$INPUTFILE>) {\n    my($inputLine) = $_;\n    chomp ($inputLine);\n    \n    $decryptedPassword = RC4($key,$inputLine);\n  }\n  \n}\n\n\n\nif (!$studentfile) {\n  &showUsage;\n}\n\n\n\n\n$summaryLine = \"\\nDirectory Permission Updates:\\n--------------------------\\n\\n\";\n\n\n\nmy($INPUTFILE);\nopen ($INPUTFILE, \"<$studentfile\") or die \"Could not open $studentfile\\n\";\n\nwhile (<$INPUTFILE>) {\n  \n  $_ =~ s/\\cM\\cJ|\\cM|\\cJ/\\n/g;  # Re-format Windows files\n  my($inputLine) = $_;\n  chomp ($inputLine);\n  \n  unless ($inputLine =~ /^\\s*$/) {\n    \n    \n    my($submitPath) = $sourceRoot . \"/\" . $domainname . \"/\" . $inputLine . \"/submit\";\n    my($returnPath) = $sourceRoot . \"/\" . $domainname . \"/\" . $inputLine . \"/returned\";\n    my($mynotesPath) = $sourceRoot . \"/\" . $domainname . \"/\" . $inputLine .\"/mynotes\";\n    \n    unless (-e $submitPath) { \n      system (\"echo $decryptedPassword | sudo mkdir $submitPath\"); #or die \"\\nCould not create directory $submitPath.\\n\"; \n      $summaryLine = $summaryLine . \"\\nCreated submit path $submitPath for user $inputLine.\\n\";\n    } else {\n      $summaryLine = $summaryLine . \"\\nSubmit path $submitPath for user $inputLine already exists.\\n\";\n    }\n    \n    unless (-e $returnPath) { \n      system (\"echo $decryptedPassword | sudo mkdir $returnPath\");  #or die \"\\nCould not create directory $returnPath.\\n\"; \n      $summaryLine = $summaryLine . \"\\nCreated return path $returnPath for user $inputLine.\\n\";\n    } else {\n      $summaryLine = $summaryLine . \"\\nReturn path $returnPath for user $inputLine already exists.\\n\";\n    }\n    \n    unless (-e $mynotesPath) {\n      system (\"echo $decryptedPassword | sudo mkdir $mynotesPath\");  #or die \"\\nCould not create directory $returnPath.\\n\";\n      $summaryLine = $summaryLine . \"\\nCreated mynotes path $mynotesPath for user $inputLine.\\n\";\n    } else {\n      $summaryLine = $summaryLine . \"\\nmynotes path $mynotesPath for user $inputLine already exists.\\n\";\n    }\n    \n    \n    my($securityToken) = $userDirective . $inputLine . \":\" . $group;\n    \n    system(\"echo $decryptedPassword | sudo chown $securityToken $submitPath\");\n    $summaryLine = $summaryLine . \"\\nChanged ownership of submit path $submitPath to $securityToken.\\n\";\n    \n    system(\"echo $decryptedPassword | sudo chown $securityToken $returnPath\");\n    $summaryLine = $summaryLine . \"\\nChanged ownership of return path $returnPath to $securityToken.\\n\";\n    \n    system(\"echo $decryptedPassword | sudo chown $securityToken $mynotesPath\");\n    $summaryLine = $summaryLine . \"\\nChanged ownership of mynotes path $mynotesPath to $securityToken.\\n\";\n    \n    \n    system(\"echo $decryptedPassword | sudo chmod $permissions $submitPath\");\n    $summaryLine = $summaryLine . \"\\nChanged permissions of submit path $submitPath to $permissions.\\n\";\n    \n    system(\"echo $decryptedPassword | sudo chmod $permissions $returnPath\");\n    $summaryLine = $summaryLine . \"\\nChanged permissions of return path $returnPath to $permissions.\\n\";\n    \n    system(\"echo $decryptedPassword | sudo chmod $permissions $mynotesPath\");\n    $summaryLine = $summaryLine . \"\\nChanged permissions of mynotes path $mynotesPath to $permissions.\\n\";\n    \n    \n  }\n  \n}\n\nclose ($INPUTFILE);\n\n$summaryLine = $summaryLine . \"\\n\";\n\nprint $summaryLine;\n\nif ($sendEmail == TRUE) {\n  print \"\\nSending summary email to $recipientAddress.\\n\";\n  my ($emailSubject) = \"Subject: RStudio directories updated\";\n  my ($sendmailObject) = \"/usr/sbin/sendmail -F RStudio_Grades\\@georgetowncollege.edu -t\";\n  my ($replyAddress) = \"Reply-to: RStudio_Grades\\@georgetowncollege.edu\";\n  my ($recipient) = \"To: $recipientAddress\";\n  open (SENDMAIL, \"|$sendmailObject\") or die \"Cannot open $sendmailObject: $!\";\n  print SENDMAIL $emailSubject;\n  print SENDMAIL \"\\n\";\n  print SENDMAIL $recipient;\n  print SENDMAIL \"\\n\";\n  print SENDMAIL $replyAddress;\n  print SENDMAIL \"\\n\";\n  print SENDMAIL \"Content-type: text/plain\\n\\n\";\n  print SENDMAIL \"\\n\";\n  print SENDMAIL $summaryLine;\n  print SENDMAIL \"\\n\";\n  print SENDMAIL \".\";\n  close (SENDMAIL);\n}",
    "created" : 1409925889256.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "627934713",
    "id" : "87974740",
    "lastKnownWriteTime" : 1409927695,
    "path" : "~/classr/inst/createdirectories.pl",
    "project_path" : "inst/createdirectories.pl",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "text"
}